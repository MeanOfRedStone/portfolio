# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: portfolio CI with Gradle

# 'master' branch에 push와 pull 이루이지면 작업 진행
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    #(1)Spring Boot 어플리케이션 Build
    - name: Spring Boot Build
      run: ./gradlew clean build -x test

    #(2)Docker 이미지 Build
    - name: docker image build
      run: docker build -t meanofredstone/portfolio .

    #(3)DockerHub Login
    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    #(4)DockerHub Push
    - name: docker Hub push
      run: docker push meanofredstone/portfolio

#    #(5)GET GitHub IP
#    - name: get GitHub IP
#      id: ip
#      uses: haythem/public-ip@v1.2
#
#    #(6)Configure AWS Credentials - AWS 접근 권한 취득(IAM)
#    - name: Configure AWS Credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: ap-northeast-2
#
#    #(7)Add github ip to AWS
#    - name: Add GitHub IP to AWS
#      run: |
#        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

    #(8)AWS EC2 Server Connect & Docker 명령어 실행 - 도커 데스크톱 켜놔야함
    - name: AWS EC2 Connection
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        password: ${{ secrets.EC2_PASSWORD }}
        port: ${{ secrets.EC2_SSH_PORT }}
        timeout: 60s
        script: |
          sudo docker stop portfolio
          sudo docker rm portfolio
          sudo docker run -it -d -p 8080:8080 --name portfolio meanofredstone/portfolio

#      # REMOVE Github IP FROM security group
#    - name: Remove IP FROM security group
#      run: |
#        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

